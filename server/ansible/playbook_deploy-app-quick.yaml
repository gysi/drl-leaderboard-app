---
- name: "Deploy App"
  hosts: all
  user: root

  tasks:
    - name: "Synchronize Docker Compose project with remote host"
      ansible.posix.synchronize:
        src: app/
        dest: app
        archive: false
        recursive: true
        delete: true
        checksum: true

    - name: "Apply Jinja2 templating to app/nginx_conf/conf.d/template/app.conf.j2"
      ansible.builtin.template:
        src: app/nginx_conf/conf.d/template/app.conf.j2
        dest: app/nginx_conf/conf.d/app.conf
        mode: '644'

    - name: "Apply Jinja2 templating to app/nginx_conf/conf.d/template/transmitters.conf.j2"
      ansible.builtin.template:
        src: app/nginx_conf/conf.d/template/transmitters.conf.j2
        dest: app/nginx_conf/conf.d/transmitters.conf
        mode: '644'

    - name: "Apply Jinja2 templating to app/template/init-letsencrypt.sh.j2"
      ansible.builtin.template:
        src: app/template/init-letsencrypt.sh.j2
        dest: app/init-letsencrypt.sh
        mode: '744'

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname }}"
        file_type: any
        hidden: true
      register: certdir_leaderboard

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_transmitters }}"
        file_type: any
        hidden: true
      register: certdir_transmitters

    - name: "Tear down existing services"
      community.docker.docker_compose:
        project_src: /root/app
        state: absent

    - name: "Create certificates"
      ansible.builtin.command: app/init-letsencrypt.sh
      when: certdir_leaderboard.matched == 0 or certdir_transmitters.matched == 0
      changed_when: true

    - name: "Create and start services"
      community.docker.docker_compose:
        project_src: /root/app
        build: true
        state: present
      register: output

    - name: "Docker-compose debug"
      ansible.builtin.debug:
        var: output
