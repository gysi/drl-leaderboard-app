---
- name: "Deploy App"
  hosts: all
  user: root

  tasks:
    - name: "Create directories for thumbor with correct permissions"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
      loop:
        - app/data/imgcache
        - app/data/imgcache/result-storage
        - app/data/imgcache/source-storage

    - name: "Synchronize Docker Compose project with remote host"
      ansible.posix.synchronize:
        src: app/
        dest: app
        archive: false
        recursive: true
        delete: true
        checksum: true

    - name: "Apply Jinja2 templating to app/nginx_conf/conf.d/template/app.conf.j2"
      ansible.builtin.template:
        src: app/nginx_conf/conf.d/template/app.conf.j2
        dest: app/nginx_conf/conf.d/app.conf
        mode: '644'

    - name: "Apply Jinja2 templating to app/nginx_conf/conf.d/template/transmitters.conf.j2"
      ansible.builtin.template:
        src: app/nginx_conf/conf.d/template/transmitters.conf.j2
        dest: app/nginx_conf/conf.d/transmitters.conf
        mode: '644'

    - name: "Apply Jinja2 templating to app/nginx_conf/conf.d/template/betaflight_calculator.conf.j2"
      ansible.builtin.template:
        src: app/nginx_conf/conf.d/template/betaflight_calculator.conf.j2
        dest: app/nginx_conf/conf.d/betaflight_calculator.conf
        mode: '644'

    - name: "Apply Jinja2 templating to app/template/init-letsencrypt.sh.j2"
      ansible.builtin.template:
        src: app/template/init-letsencrypt.sh.j2
        dest: app/init-letsencrypt.sh
        mode: '744'

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_old }}"
        file_type: any
        hidden: true
      register: certdir_leaderboard_old

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_transmitters_old }}"
        file_type: any
        hidden: true
      register: certdir_transmitters_old

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_betaflight_calculator_old }}"
        file_type: any
        hidden: true
      register: certdir_betaflight_calculator_old

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname }}"
        file_type: any
        hidden: true
      register: certdir_leaderboard

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_transmitters }}"
        file_type: any
        hidden: true
      register: certdir_transmitters

    - name: "Check if certificates directory is empty"
      ansible.builtin.find:
        paths: "app/data/certbot/conf/live/{{ server.hostname_betaflight_calculator }}"
        file_type: any
        hidden: true
      register: certdir_betaflight_calculator

    - name: "Tear down existing services"
      ansible.builtin.command:
        chdir: /root/app
        cmd: docker compose down
      register: result
      changed_when: result.stdout != ""

    - name: "Create certificates"
      ansible.builtin.command: app/init-letsencrypt.sh
      when: >-
        certdir_leaderboard.matched == 0
        or certdir_transmitters.matched == 0
        or certdir_betaflight_calculator.matched == 0
        or certdir_leaderboard_old.matched == 0
        or certdir_transmitters_old.matched == 0
        or certdir_betaflight_calculator_old.matched == 0
      changed_when: true

    - name: "Create and start services"
      ansible.builtin.command:
        chdir: /root/app
        cmd: docker compose up --build --remove-orphans -d
      register: result
      changed_when: result.stdout != ""

#    - name: "Docker-compose debug"
#      ansible.builtin.debug:
#        var: output
