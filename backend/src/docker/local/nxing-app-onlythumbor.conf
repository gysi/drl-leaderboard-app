log_format postdata escape=none '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" "$request_body"';

limit_req_zone $binary_remote_addr zone=imglimit:10m rate=100r/s;

server {
    listen 80 default_server;
    server_name _;

    access_log  /var/log/nginx/app-access.log main;
    error_log  /var/log/nginx/app-error.log warn;

    location ~* ^/thumbor/(.*(\Q.amazonaws.com/drl-game-dashboard\E|\Q.steamstatic.com\E|\Qdrl-sim-cup.s3.amazonaws.com\E|\Qapi.drlgame.com\E|\Qsteamcdn-a.akamaihd.net\E|\Qdrl-sim-virtual-season.s3.amazonaws.com\E|\Qdrl-game-api.s3.amazonaws.com\E).*)$ {
        limit_req zone=imglimit burst=500 nodelay;
        limit_req_status 429;
        # Docker DNS Resolver, this is needed so that nginx doesn't crash when the upstream is not available
        resolver 127.0.0.11 valid=30s ipv6=off;
        set $upstream_thumbor thumbor;
        rewrite ^ $request_uri;
        rewrite ^/thumbor/(.*) unsafe/$1 break;
        return 400; #if the second rewrite won't match
        proxy_pass http://$upstream_thumbor:8888/$uri;
        proxy_http_version  1.1;
        proxy_set_header Connection "";

        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }
}
